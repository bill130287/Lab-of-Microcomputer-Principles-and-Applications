; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\scankey.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\scankey.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\CM0\DeviceSupport\Nuvoton\NUC1xx -I.\Include -I.\Include\Driver -I.\ -I.\Src\Driver -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Nuvoton\NUC1xx --omf_browse=.\obj\scankey.crf Src\NUC1xx-LB_002\ScanKey.c]
                          THUMB

                          AREA ||i.CloseKeyPad||, CODE, READONLY, ALIGN=1

                  CloseKeyPad PROC
;;;23     
;;;24     void CloseKeyPad(void)
000000  b510              PUSH     {r4,lr}
;;;25     {
;;;26     	uint8_t i;
;;;27     
;;;28     	for(i=0;i<6;i++)
000002  2400              MOVS     r4,#0
000004  e005              B        |L1.18|
                  |L1.6|
;;;29     	DrvGPIO_Close(E_GPA, i);
000006  4621              MOV      r1,r4
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       DrvGPIO_Close
00000e  1c60              ADDS     r0,r4,#1              ;28
000010  b2c4              UXTB     r4,r0                 ;28
                  |L1.18|
000012  2c06              CMP      r4,#6                 ;28
000014  dbf7              BLT      |L1.6|
;;;30     }
000016  bd10              POP      {r4,pc}
;;;31     
                          ENDP


                          AREA ||i.OpenKeyPad||, CODE, READONLY, ALIGN=1

                  OpenKeyPad PROC
;;;15     */
;;;16     void OpenKeyPad(void)
000000  b510              PUSH     {r4,lr}
;;;17     {
;;;18     	uint8_t i;
;;;19     	/* Initial key pad */
;;;20     	for(i=0;i<6;i++)
000002  2400              MOVS     r4,#0
000004  e006              B        |L2.20|
                  |L2.6|
;;;21     	DrvGPIO_Open(E_GPA, i, E_IO_QUASI);
000006  2203              MOVS     r2,#3
000008  4621              MOV      r1,r4
00000a  2000              MOVS     r0,#0
00000c  f7fffffe          BL       DrvGPIO_Open
000010  1c60              ADDS     r0,r4,#1              ;20
000012  b2c4              UXTB     r4,r0                 ;20
                  |L2.20|
000014  2c06              CMP      r4,#6                 ;20
000016  dbf6              BLT      |L2.6|
;;;22     }
000018  bd10              POP      {r4,pc}
;;;23     
                          ENDP


                          AREA ||i.Scankey||, CODE, READONLY, ALIGN=2

                  Scankey PROC
;;;31     
;;;32     uint8_t Scankey(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;33     {
;;;34     	uint8_t act[4]={0x3b, 0x3d, 0x3e};    
000002  481e              LDR      r0,|L3.124|
000004  6800              LDR      r0,[r0,#0]  ; <Data1>
000006  9000              STR      r0,[sp,#0]
;;;35     	uint8_t i,temp,pin;
;;;36     
;;;37     	for(i=0;i<3;i++)
000008  2400              MOVS     r4,#0
00000a  e033              B        |L3.116|
                  |L3.12|
;;;38     	{
;;;39     		temp=act[i];
00000c  4668              MOV      r0,sp
00000e  5d06              LDRB     r6,[r0,r4]
;;;40     		for(pin=0;pin<6;pin++)
000010  2500              MOVS     r5,#0
000012  e00e              B        |L3.50|
                  |L3.20|
;;;41     		{
;;;42     			if((temp&0x01)==0x01)
000014  07f0              LSLS     r0,r6,#31
000016  0fc0              LSRS     r0,r0,#31
000018  d004              BEQ      |L3.36|
;;;43     				DrvGPIO_SetBit(E_GPA,pin);
00001a  4629              MOV      r1,r5
00001c  2000              MOVS     r0,#0
00001e  f7fffffe          BL       DrvGPIO_SetBit
000022  e003              B        |L3.44|
                  |L3.36|
;;;44     			else
;;;45     				DrvGPIO_ClrBit(E_GPA,pin);
000024  4629              MOV      r1,r5
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       DrvGPIO_ClrBit
                  |L3.44|
;;;46     			temp>>=1;
00002c  1076              ASRS     r6,r6,#1
00002e  1c68              ADDS     r0,r5,#1              ;40
000030  b2c5              UXTB     r5,r0                 ;40
                  |L3.50|
000032  2d06              CMP      r5,#6                 ;40
000034  dbee              BLT      |L3.20|
;;;47     		}
;;;48     		delay();
000036  f7fffffe          BL       delay
;;;49     		if(DrvGPIO_GetBit(E_GPA,3)==0)
00003a  2103              MOVS     r1,#3
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       DrvGPIO_GetBit
000042  2800              CMP      r0,#0
000044  d102              BNE      |L3.76|
;;;50     			return(i+1);
000046  1c60              ADDS     r0,r4,#1
000048  b2c0              UXTB     r0,r0
                  |L3.74|
;;;51     		if(DrvGPIO_GetBit(E_GPA,4)==0)
;;;52     			return(i+4);
;;;53     		if(DrvGPIO_GetBit(E_GPA,5)==0)
;;;54     			return(i+7);
;;;55     	}
;;;56     		return 0;
;;;57     }
00004a  bdf8              POP      {r3-r7,pc}
                  |L3.76|
00004c  2104              MOVS     r1,#4                 ;51
00004e  2000              MOVS     r0,#0                 ;51
000050  f7fffffe          BL       DrvGPIO_GetBit
000054  2800              CMP      r0,#0                 ;51
000056  d102              BNE      |L3.94|
000058  1d20              ADDS     r0,r4,#4              ;52
00005a  b2c0              UXTB     r0,r0                 ;52
00005c  e7f5              B        |L3.74|
                  |L3.94|
00005e  2105              MOVS     r1,#5                 ;53
000060  2000              MOVS     r0,#0                 ;53
000062  f7fffffe          BL       DrvGPIO_GetBit
000066  2800              CMP      r0,#0                 ;53
000068  d102              BNE      |L3.112|
00006a  1de0              ADDS     r0,r4,#7              ;54
00006c  b2c0              UXTB     r0,r0                 ;54
00006e  e7ec              B        |L3.74|
                  |L3.112|
000070  1c60              ADDS     r0,r4,#1              ;37
000072  b2c4              UXTB     r4,r0                 ;37
                  |L3.116|
000074  2c03              CMP      r4,#3                 ;37
000076  dbc9              BLT      |L3.12|
000078  2000              MOVS     r0,#0                 ;56
00007a  e7e6              B        |L3.74|
                          ENDP

                  |L3.124|
                          DCD      ||.constdata||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  3b3d3e00          DCB      0x3b,0x3d,0x3e,0x00

;*** Start embedded assembler ***

#line 1 "Src\\NUC1xx-LB_002\\ScanKey.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_ScanKey_c_47e5527a____REV16|
#line 129 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_ScanKey_c_47e5527a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_ScanKey_c_47e5527a____REVSH|
#line 144
|__asm___9_ScanKey_c_47e5527a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
